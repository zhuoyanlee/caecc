class VamtamSlidesHandler extends elementorModules.frontend.handlers.SwiperBase{getDefaultSettings(){return{selectors:{slider:".elementor-slides-wrapper",slide:".swiper-slide",slideInnerContents:".swiper-slide-contents",activeSlide:".swiper-slide-active",activeDuplicate:".swiper-slide-duplicate-active"},classes:{animated:"animated",kenBurnsActive:"elementor-ken-burns--active",slideBackground:"swiper-slide-bg"},attributes:{dataSliderOptions:"slider_options",dataAnimation:"animation"}}}getDefaultElements(){const selectors=this.getSettings("selectors"),elements={$swiperContainer:this.$element.find(selectors.slider)};return elements.$slides=elements.$swiperContainer.find(selectors.slide),elements}getSwiperOptions(){const elementSettings=this.getElementSettings(),swiperOptions={autoplay:this.getAutoplayConfig(),grabCursor:!0,initialSlide:this.getInitialSlide(),slidesPerView:1,slidesPerGroup:1,loop:"yes"===elementSettings.infinite,speed:elementSettings.transition_speed,effect:elementSettings.transition,observeParents:!0,observer:!0,handleElementorBreakpoints:!0,on:{slideChange:()=>{this.handleKenBurns(),elementSettings.infinite&&this.ensureSlidesContentVisibility(),this.triggerInnerAnims()}}},showArrows="arrows"===elementSettings.navigation||"both"===elementSettings.navigation,pagination="dots"===elementSettings.navigation||"both"===elementSettings.navigation;return showArrows&&(swiperOptions.navigation={prevEl:".elementor-swiper-button-prev",nextEl:".elementor-swiper-button-next"}),pagination&&(swiperOptions.pagination={el:".swiper-pagination",type:"bullets",clickable:!0}),!0===swiperOptions.loop&&(swiperOptions.loopedSlides=this.getSlidesCount()),"fade"===swiperOptions.effect&&(swiperOptions.fadeEffect={crossFade:!0}),swiperOptions}getAutoplayConfig(){const elementSettings=this.getElementSettings();return"yes"===elementSettings.autoplay&&{stopOnLastSlide:!0,delay:elementSettings.autoplay_speed,disableOnInteraction:"yes"===elementSettings.pause_on_interaction}}initSingleSlideAnimations(){const settings=this.getSettings(),animation=this.elements.$swiperContainer.data(settings.attributes.dataAnimation);this.elements.$swiperContainer.find("."+settings.classes.slideBackground).addClass(settings.classes.kenBurnsActive),animation&&this.elements.$swiperContainer.find(settings.selectors.slideInnerContents).addClass(settings.classes.animated+" "+animation)}async initSlider(){const $slider=this.elements.$swiperContainer;if(!$slider.length)return;if(1>=this.getSlidesCount())return;const Swiper=elementorFrontend.utils.swiper;this.swiper=await new Swiper($slider,this.getSwiperOptions()),$slider.data("swiper",this.swiper),this.handleKenBurns();const elementSettings=this.getElementSettings();elementSettings.pause_on_hover&&this.togglePauseOnHover(!0);const settings=this.getSettings(),animation=$slider.data(settings.attributes.dataAnimation);animation&&(this.swiper.on("slideChangeTransitionStart",(function(){const $sliderContent=$slider.find(settings.selectors.slideInnerContents);$sliderContent.removeClass(settings.classes.animated+" "+animation).hide()})),this.swiper.on("slideChangeTransitionEnd",(function(){const $currentSlide=$slider.find(settings.selectors.slideInnerContents);$currentSlide.show().addClass(settings.classes.animated+" "+animation)})))}onInit(){elementorModules.frontend.handlers.Base.prototype.onInit.apply(this,arguments),this.applyOnChangeSlideHandlers()}getChangeableProperties(){return{pause_on_hover:"pauseOnHover",pause_on_interaction:"disableOnInteraction",autoplay_speed:"delay",transition_speed:"speed"}}updateSwiperOption(propertyName){if(0===propertyName.indexOf("width"))return void this.swiper.update();const elementSettings=this.getElementSettings(),newSettingValue=elementSettings[propertyName],changeableProperties=this.getChangeableProperties();let propertyToUpdate=changeableProperties[propertyName],valueToUpdate=newSettingValue;switch(propertyName){case"autoplay_speed":propertyToUpdate="autoplay",valueToUpdate={delay:newSettingValue,disableOnInteraction:"yes"===elementSettings.pause_on_interaction};break;case"pause_on_hover":this.togglePauseOnHover("yes"===newSettingValue);break;case"pause_on_interaction":valueToUpdate="yes"===newSettingValue}"pause_on_hover"!==propertyName&&(this.swiper.params[propertyToUpdate]=valueToUpdate),this.swiper.update()}onElementChange(propertyName){if(1>=this.getSlidesCount())return;const changeableProperties=this.getChangeableProperties();Object.prototype.hasOwnProperty.call(changeableProperties,propertyName)&&(this.updateSwiperOption(propertyName),this.swiper.autoplay.start())}onEditSettingsChange(propertyName){1>=this.getSlidesCount()||"activeItemIndex"===propertyName&&(this.swiper.slideToLoop(this.getEditSettings("activeItemIndex")-1),this.swiper.autoplay.stop())}triggerInnerAnims(){const activeItemIndex=this.activeItemIndex||(this.swiper?this.swiper.activeIndex:this.getInitialSlide()),realIndex=this.swiper?this.swiper.realIndex:this.getInitialSlide(),$activeSlide=this.swiper?jQuery(this.swiper.slides[activeItemIndex]):jQuery(this.elements.$slides[activeItemIndex]),$animsInSlide=$activeSlide.find('[data-settings*="animation"]');if(0===activeItemIndex||0===realIndex)return;if(this.slidesAnimated){if(this.slidesAnimated.includes(realIndex))return}else this.slidesAnimated=[];function getAnimation(settings){return elementorFrontend.getCurrentDeviceSetting(settings,"animation")||elementorFrontend.getCurrentDeviceSetting(settings,"_animation")}function getAnimationDelay(settings){return elementorFrontend.getCurrentDeviceSetting(settings,"animation_delay")||elementorFrontend.getCurrentDeviceSetting(settings,"_animation_delay")||0}const _self=this;$animsInSlide.each((function(i,el){const $el=jQuery(el),settings=$el.data("settings"),anim=settings&&getAnimation(settings),animDelay=settings&&getAnimationDelay(settings);anim&&(_self.slidesAnimated.push(realIndex),$el.addClass("elementor-invisible").removeClass("animated").removeClass(anim),setTimeout((function(){$el.removeClass("elementor-invisible").addClass("animated "+anim)}),animDelay))}))}ensureSlidesContentVisibility($slide){const slides=this.swiper?this.swiper.slides:this.elements.$slides;jQuery(slides).each((function(i,slide){jQuery(slide).find(".elementor-invisible").each((function(i,el){jQuery(el).removeClass("elementor-invisible")}))}))}applyOnChangeSlideHandlers(){const intervalId=setInterval(()=>{const elementSettings=this.getElementSettings(),$slider=this.elements.$swiperContainer;this.swiper=$slider.data("swiper");const _this=this;this.swiper&&(clearInterval(intervalId),this.swiper.on("slideChange",(function(){elementSettings.infinite&&_this.ensureSlidesContentVisibility(),_this.triggerInnerAnims()})))},250)}}jQuery(window).on("elementor/frontend/init",()=>{if(elementorFrontend.elementsHandler&&elementorFrontend.elementsHandler.attachHandler)elementorFrontend.elementsHandler.attachHandler("slides",VamtamSlidesHandler);else{const addHandler=$element=>{elementorFrontend.elementsHandler.addHandler(VamtamSlidesHandler,{$element:$element})};elementorFrontend.hooks.addAction("frontend/element_ready/slides.default",addHandler,9999)}});